<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>NokiDev&#39;s blog</title>
    <link>https://blog-gh.noki.fr/posts/traefik_article_series/</link>
    <description>Recent content on NokiDev&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 13 Jun 2020 01:14:20 +0200</lastBuildDate>
    
	<atom:link href="https://blog-gh.noki.fr/posts/traefik_article_series/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Securing traefik installation</title>
      <link>https://blog-gh.noki.fr/posts/traefik_article_series/02_securing_traefik_installation/</link>
      <pubDate>Sat, 13 Jun 2020 01:14:20 +0200</pubDate>
      
      <guid>https://blog-gh.noki.fr/posts/traefik_article_series/02_securing_traefik_installation/</guid>
      <description>In this article we will see how to configure traefik to use https and configure middlewares for having a quite good security rank on SSLLabs. This is mandatory if you plan to exposes your services on the Internet.
 This article directly follows Using traefik for deploying your first service and will use docker-compose file definitions we used back then.
 For this article we will need a few things   A domain name</description>
    </item>
    
    <item>
      <title>Using Traefik and authelia to protect your services</title>
      <link>https://blog-gh.noki.fr/posts/traefik_article_series/03_using_traefik_and_authelia_to_secure_services_access/</link>
      <pubDate>Fri, 12 Jun 2020 20:30:39 +0200</pubDate>
      
      <guid>https://blog-gh.noki.fr/posts/traefik_article_series/03_using_traefik_and_authelia_to_secure_services_access/</guid>
      <description>Authelia is a great service, to help to protect your other services. I choose it because it has some nice features such as LDAP integration, TOTP, Yubikey and push notification support, it has been initiated by a french developper, and is written in go. (The last point is totally subjective but Go software tends to be good softwares.)
 I deployed it on my homelab for protecting services that doesn&amp;#8217;t provide any authentication, such as traefik dashboard or for services that don&amp;#8217;t provide ldap auth.</description>
    </item>
    
    <item>
      <title>Using Traefik v2.2 to selfhost your first service.</title>
      <link>https://blog-gh.noki.fr/posts/traefik_article_series/01_using_traefik_2.2_reverse_proxy_for_selfhosting/</link>
      <pubDate>Fri, 12 Jun 2020 20:29:46 +0200</pubDate>
      
      <guid>https://blog-gh.noki.fr/posts/traefik_article_series/01_using_traefik_2.2_reverse_proxy_for_selfhosting/</guid>
      <description>Traefik is a modern reverse proxy that integrates with container technologies and related orchestrators. In our case we&amp;#8217;re going to use it&amp;#8217;s docker integration. Traefik uses docker socket to retrieve information about running containers, and labels that are attached to it. (if you use docker inspect you would get the idea.)
 This article requires that you are already familiar with container thechnology and especially docker.
 Disclaimer: This article is not meant to secure your services, it is a pretty basic setup to start with traefik, if you want to secure your services head to the next article of this series</description>
    </item>
    
  </channel>
</rss>